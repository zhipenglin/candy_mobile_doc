webpackJsonp([3],{"./containers/Dialog/index.js":function(n,e,t){"use strict";(function(n){function l(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(e,"__esModule",{value:!0});var a=t("./containers/Page/index.js"),c=l(a),o=t("./components/Code/index.js"),r=l(o),i=t("../node_modules/candy-mobile/lib/index.js");e.default=function(){return n.createElement(c.default,null,n.createElement("div",{className:"ct-page__title"},"提示框："),n.createElement(r.default,null,'\n<Button type="primary" size="small" onClick={()=>{\n    new Toast(\'错误提示框\');\n}}>显示错误提示框</Button>\n<Button type="primary" size="small" onClick={()=>{\n    new Toast(\'成功提示框\',{type:\'success\'});\n}}>显示成功提示框</Button>\n<Button type="primary" size="small" onClick={()=>{\n    new Toast(\'加载中...\',{type:\'loading\'});\n}}>显示加载提示框</Button>\n            '),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Toast("错误提示框")}},"显示错误提示框"),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Toast("成功提示框",{type:"success"})}},"显示成功提示框"),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Toast("加载中...",{type:"loading"})}},"显示加载提示框"),n.createElement("div",{className:"ct-page__title"},"设置自动关闭时间："),n.createElement(r.default,null,'\n<Button type="primary" size="small" onClick={()=>{\n    new Toast(\'3s后自动关闭\',{time:3000});\n}}>显示提示框</Button>\n<Button type="primary" size="small" onClick={()=>{\n    new Toast(\'不自动关闭\',{time:0});\n}}>显示提示框</Button>\n            '),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Toast("3s后自动关闭",{time:3e3})}},"显示提示框"),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Toast("不自动关闭",{time:0})}},"显示提示框"),n.createElement("div",{className:"ct-page__title"},"对话框："),n.createElement(r.default,null,"\n<Button type=\"primary\" size=\"small\" onClick={()=>{\n    new Confirm('确认框');\n}}>确认框</Button>\n<Button type=\"primary\" size=\"small\" onClick={()=>{\n    new Confirm('确认框',{confirmCallback:function(){\n        new Toast('确认',{type:'success'});\n    },cancelCallback:function(){\n        new Toast('取消',{type:'success'});\n    }});\n}}>带取消的确认框</Button>\n<Button type=\"primary\" size=\"small\" onClick={()=>{\n    new Confirm('确认框',{title:'请确定',{confirmCallback:function(){\n        new Toast('确认',{type:'success'});\n    },cancelCallback:function(){\n        new Toast('取消',{type:'success'});\n    }});\n}}>带标题的确认框</Button>\n            "),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Confirm("确认框")}},"确认框"),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Confirm("确认框",{confirmCallback:function(){new i.Toast("确认",{type:"success"})},cancelCallback:function(){new i.Toast("取消",{type:"success"})}})}},"带取消的确认框"),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Confirm("确认框",{confirmCallback:function(){new i.Toast("确认",{type:"success"})},cancelCallback:function(){new i.Toast("取消",{type:"success"})}})}},"带标题的确认框"),n.createElement("div",{className:"ct-page__title"},"设置按钮文案："),n.createElement(r.default,null,"\n<Button type=\"primary\" onClick={()=>{\n    new Confirm('确认框',{\n        textCancel:'我是取消按钮',\n        textConfirm:'我是确认按钮',\n        confirmCallback:function(){\n            new Toast('确认',{type:'success'});\n        },\n        cancelCallback:function(){\n            new Toast('取消',{type:'success'});\n        }\n    });\n}}>自定义按钮文案的确认框</Button>\n            "),n.createElement(i.Button,{type:"primary",onClick:function(){new i.Confirm("确认框",{textCancel:"我是取消按钮",textConfirm:"我是确认按钮",confirmCallback:function(){new i.Toast("确认",{type:"success"})},cancelCallback:function(){new i.Toast("取消",{type:"success"})}})}},"自定义按钮文案的确认框"),n.createElement("div",{className:"ct-page__title"},"自定义/取消对话框自动关闭："),n.createElement(r.default,null,"\n<Button type=\"primary\" onClick={()=>{\n    new Confirm('确认框',{\n        textCancel:'我是取消按钮',\n        textConfirm:'我是确认按钮',\n        confirmCallback:function(){\n            new Toast('不关闭对话框',{type:'success'});\n            return false\n        },\n        cancelCallback:function(remove){\n            new Toast('3s后关闭对话框',{type:'success'});\n            setTimeout(()=>{\n                remove();\n            },3000);\n            return false;\n        }\n    });\n}}>自定义按钮文案的确认框</Button>\n            "),n.createElement(i.Button,{type:"primary",onClick:function(){new i.Confirm("确认框",{textCancel:"我是取消按钮",textConfirm:"我是确认按钮",confirmCallback:function(){return new i.Toast("不关闭对话框",{type:"success"}),!1},cancelCallback:function(n){return new i.Toast("3s后关闭对话框",{type:"success"}),setTimeout(function(){n()},3e3),!1}})}},"自定义确认框关闭"),n.createElement("div",{className:"ct-page__title"},"操作表："),n.createElement(r.default,null,"\n<Button type=\"primary\" size=\"small\" onClick={function(){\n    new Action([[{\n        text:'请确认',\n        label:true\n    },{\n        text:'确定',\n        callback:function(){\n            new Toast('点击确定');\n        }\n    },{\n        text:'确定',\n        callback:function(){\n            new Toast('不关闭');\n            return false;\n        }\n    },{\n        text:'确定',\n        callback:function(remove){\n            new Toast('3s后关闭');\n            setTimeout(remove,3000);\n            return false;\n        }\n    }],[{\n        text:'取消',\n        color:'red'\n    }]]);\n}}>操作表</Button>\n                "),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){new i.Action([[{text:"请确认",label:!0},{text:"确定",callback:function(){new i.Toast("点击确定")}},{text:"不关闭",callback:function(){return new i.Toast("不关闭"),!1}},{text:"3s后关闭",callback:function(n){return new i.Toast("3s后关闭"),setTimeout(n,3e3),!1}}],[{text:"取消",color:"red"}]])}},"操作表"),n.createElement("div",{className:"ct-page__title"},"Drawer："),n.createElement(r.default,null,'\n<Button type="primary" size="small" onClick={()=>{\n    const Menu=({remove})=>{\n        return (\n            <div>\n                <h1>我是Drawer</h1>\n                <Button size="small" onClick={remove}>关闭Drawer</Button>\n            </div>\n        );\n    }\n    new Drawer(<Menu></Menu>);\n}}>抽屉</Button>\n<Button type="primary" size="small" onClick={()=>{\n    const Menu=({remove})=>{\n        return (\n            <div>\n                <h1>我是右Drawer</h1>\n                <Button size="small" onClick={remove}>关闭Drawer</Button>\n            </div>\n        );\n    }\n    new Drawer(<Menu></Menu>,{right:true});\n}}>右抽屉</Button>\n            '),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){var e=function(e){var t=e.remove;return n.createElement("div",null,n.createElement("h1",null,"我是Drawer"),n.createElement(i.Button,{size:"small",onClick:t},"关闭Drawer"))};new i.Drawer(n.createElement(e,null))}},"抽屉"),n.createElement(i.Button,{type:"primary",size:"small",onClick:function(){var e=function(e){var t=e.remove;return n.createElement("div",null,n.createElement("h1",null,"我是右Drawer"),n.createElement(i.Button,{size:"small",onClick:t},"关闭Drawer"))};new i.Drawer(n.createElement(e,null),{right:!0})}},"右抽屉"))}}).call(e,t("../node_modules/react/react.js"))}});
//# sourceMappingURL=3.js.map